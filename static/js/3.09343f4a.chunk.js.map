{"version":3,"sources":["components/Dialogs/Dialogs.module.sass","components/Dialogs/Dialogitem/DialogItem.module.sass","components/Dialogs/Chat/Chat.module.sass","components/Dialogs/Dialogitem/DialogItem.jsx","components/Dialogs/Chat/Chat.jsx","components/Dialogs/AddMessage/AddMessage.jsx","components/Dialogs/AddMessage/AddMessageFormik.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialogItem","ava","alt","src","dialog","to","name","Chat","chatBlock","avatar","userIcon","chatItem","message","reduxForm","form","onSubmit","handleSubmit","newPost","Field","component","placeholder","newMessage","buttonSend","disabled","submitting","AddMessageForm","initialValues","validationSchema","Yup","max","values","setSubmitting","resetForm","setTimeout","type","isSubmitting","AddMessageFormik","addMessage","Dialogs","dialogElements","dialogs","map","d","key","chatsElements","chats","c","wrapperContent","chat","compose","connect","state","messageReducer","authReducer","dispatch","newMessageBody","addMessageCreator","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,KAAO,wB,oBCA7GD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,IAAM,0B,oBCAxGD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,uBAAuB,IAAM,oB,wGCmB/EC,EAfI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,YAClB,yBAAKF,UAAWC,IAAME,KAClB,yBAAKC,IAAI,GAAGC,IAAKR,EAAMM,OAE3B,yBAAKH,UAAWC,IAAMK,QAClB,kBAAC,IAAD,CAASC,GAAIT,GAAOD,EAAMW,S,mCCW3BC,EAnBF,SAACZ,GACX,OACG,6BACG,yBAAKG,UAAWC,IAAMS,WACnB,yBAAKV,UAAWC,IAAME,KACnB,yBAAKC,IAAI,GACJC,IAAKR,EAAMc,QAAUC,OAI7B,yBAAKZ,UAAWC,IAAMY,UAClBhB,EAAMiB,Y,uCCIMC,YAAU,CAACC,KAAM,kBAAjBD,EAfL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,aAAclB,UAAWC,IAAMkB,SACjD,kBAACC,EAAA,EAAD,CAAOC,UAAU,WACVb,KAAK,iBACLc,YAAY,iBACZtB,UAAWC,IAAMsB,aAExB,4BAAQvB,UAAWC,IAAMuB,WAAYC,SAAU5B,EAAM6B,YAArD,Y,uBCNNC,EAAiB,SAAC9B,GACrB,OACG,oCACG,kBAAC,IAAD,CAAQ+B,cAAe,CACpBd,QAAS,IAEJe,iBAAkBC,IAAW,CAC1BhB,QAASgB,MACLC,IAAI,IAAK,oCAGhBd,SAAU,SAACe,EAAD,GAAwC,EAA9BC,cAA+B,IAAhBC,EAAe,EAAfA,UAChCC,YAAW,WACRtC,EAAMoB,SAASe,GACfE,MAEA,QAGV,SAAArC,GAAK,OACH,kBAAC,IAAD,CAAMG,UAAWC,IAAMkB,SACpB,kBAAC,IAAD,CAAgBX,KAAK,UACLc,YAAY,iBACZtB,UAAWC,IAAMsB,aAEjC,4BAAQa,KAAK,SACLX,SAAU5B,EAAMwC,aAChBrC,UAAWC,IAAMuB,YAErB3B,EAAMwC,aAAe,aAAe,cAmB3CC,EAVU,SAACzC,GAKvB,OACG,kBAAC,EAAD,CAAgBoB,SALJ,SAACe,GAEbnC,EAAM0C,WAAWP,EAAOlB,aCdf0B,EA1BC,SAAC3C,GACb,IAAI4C,EAAiB5C,EAAM6C,QAAQC,KAAI,SAAAC,GAAC,OACrC,kBAAC,EAAD,CAAYzC,IAAKyC,EAAEzC,IACPK,KAAMoC,EAAEpC,KACRT,GAAI6C,EAAE7C,GACN8C,IAAKD,EAAE7C,QAElB+C,EAAgBjD,EAAMkD,MAAMJ,KAAI,SAAAK,GAAC,OAClC,kBAAC,EAAD,CAAMlC,QAASkC,EAAElC,QACX+B,IAAKG,EAAEjD,GACPY,OAAQd,EAAMc,YAEvB,OACI,yBAAKX,UAAWC,IAAMgD,gBAClB,yBAAKjD,UAAWC,IAAMyC,SACjBD,GAEL,yBAAKzC,UAAWC,IAAMiD,MACjBJ,EACD,kBAAC,EAAD,CAAkBP,WAAY1C,EAAM0C,gB,gCCDrCY,sBACZC,aAnBqB,SAACC,GACtB,MAAO,CACJX,QAASW,EAAMC,eAAeZ,QAC9BK,MAAOM,EAAMC,eAAeP,MAC5BpC,OAAQ0C,EAAME,YAAY5C,WAGL,SAAC6C,GACzB,MAAO,CACJjB,WAAY,SAACkB,GACVD,EAASE,YAAkBD,SAUjCE,IAFYR,CAGbX","file":"static/js/3.09343f4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContent\":\"Dialogs_wrapperContent__2ZElZ\",\"dialogs\":\"Dialogs_dialogs__1gFvF\",\"chat\":\"Dialogs_chat__39oT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1TSiC\",\"dialog\":\"DialogItem_dialog__3LKK2\",\"ava\":\"DialogItem_ava__3Aj-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBlock\":\"Chat_chatBlock__2g7aB\",\"chatItem\":\"Chat_chatItem__3Nkfc\",\"ava\":\"Chat_ava__3HzcT\"};","import React from \"react\";\r\nimport style from './DialogItem.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={style.dialogItem}>\r\n            <div className={style.ava}>\r\n                <img alt=\"\" src={props.ava}/>\r\n            </div>\r\n            <div className={style.dialog}>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './Chat.module.sass';\r\nimport userIcon from \"../../../common/img/users_icon.png\";\r\n\r\n\r\nconst Chat = (props) => {\r\n   return (\r\n      <div>\r\n         <div className={style.chatBlock}>\r\n            <div className={style.ava}>\r\n               <img alt=\"\"\r\n                    src={props.avatar || userIcon}\r\n                    // src='https://i.redd.it/ahg5rdrp9vxz.jpg'\r\n               />\r\n            </div>\r\n            <div className={style.chatItem}>\r\n               {props.message}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport style from \"./AddMessage.module.sass\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.newPost}>\r\n            <Field component=\"textarea\"\r\n                   name=\"newMessageBody\"\r\n                   placeholder=\"new message...\"\r\n                   className={style.newMessage}\r\n            />\r\n            <button className={style.buttonSend} disabled={props.submitting}>\r\n               Send\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'newMessageBody'})(AddMessageForm)\r\n\r\nconst AddMessage = (props) => {\r\n    let addNewMessage = (values) => {\r\n          props.addMessage(values.newMessageBody);\r\n    }\r\n    return (\r\n        <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n    );\r\n}\r\n\r\nexport default AddMessage;","import React from \"react\";\r\nimport style from \"./AddMessage.module.sass\";\r\nimport * as Yup from \"yup\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {CustomTextarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <>\r\n         <Formik initialValues={{\r\n            message: ''\r\n         }}\r\n                 validationSchema={Yup.object({\r\n                    message: Yup.string()\r\n                       .max(300, 'Must be 300 characters or less'),\r\n                 })\r\n                 }\r\n                 onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                    setTimeout(() => {\r\n                       props.onSubmit(values)\r\n                       resetForm();\r\n                       // setSubmitting(false);\r\n                    }, 300)\r\n                 }}\r\n         >\r\n            {props => (\r\n               <Form className={style.newPost}>\r\n                  <CustomTextarea name=\"message\"\r\n                                  placeholder=\"new message...\"\r\n                                  className={style.newMessage}\r\n                  />\r\n                  <button type=\"submit\"\r\n                          disabled={props.isSubmitting}\r\n                          className={style.buttonSend}\r\n                  >\r\n                     {props.isSubmitting ? 'Sending...' : 'Send'}\r\n                  </button>\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </>\r\n   )\r\n}\r\n\r\nconst AddMessageFormik = (props) => {\r\n   let onSubmit = (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.addMessage(values.message);\r\n   }\r\n   return (\r\n      <AddMessageForm onSubmit={onSubmit}/>\r\n   );\r\n}\r\n\r\nexport default AddMessageFormik;","import React from \"react\";\r\nimport style from \"./Dialogs.module.sass\";\r\nimport DialogItem from \"./Dialogitem/DialogItem\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport AddMessage from \"./AddMessage/AddMessage\";\r\nimport AddMessageFormik from \"./AddMessage/AddMessageFormik\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogs.map(d =>\r\n       <DialogItem ava={d.ava}\r\n                   name={d.name}\r\n                   id={d.id}\r\n                   key={d.id}\r\n       />);\r\n    let chatsElements = props.chats.map(c =>\r\n       <Chat message={c.message}\r\n             key={c.id}\r\n             avatar={props.avatar}\r\n       />);\r\n    return (\r\n        <div className={style.wrapperContent}>\r\n            <div className={style.dialogs}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.chat}>\r\n                {chatsElements}\r\n                <AddMessageFormik addMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageCreator} from \"../../redux/messageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOCs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogs: state.messageReducer.dialogs,\r\n      chats: state.messageReducer.chats,\r\n      avatar: state.authReducer.avatar,\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (newMessageBody) => {\r\n         dispatch(addMessageCreator(newMessageBody));\r\n      }\r\n   }\r\n}\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}