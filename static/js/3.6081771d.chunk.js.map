{"version":3,"sources":["components/Dialogs/Dialogs.module.sass","components/Dialogs/Dialogitem/DialogItem.module.sass","components/Dialogs/Chat/Chat.module.sass","components/Dialogs/Dialogitem/DialogItem.jsx","components/Dialogs/Chat/Chat.jsx","components/Dialogs/AddMessage/AddMessage.jsx","components/Dialogs/AddMessage/AddMessageFormik.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialogItem","ava","alt","src","dialog","to","name","Chat","chatBlock","chatItem","message","reduxForm","form","onSubmit","handleSubmit","newPost","Field","component","placeholder","newMessage","buttonSend","disabled","submitting","CustomTextarea","label","useField","feild","meta","touched","error","AddMessageForm","initialValues","validationSchema","Yup","max","values","setSubmitting","resetForm","setTimeout","type","isSubmitting","AddMessageFormik","addMessage","Dialogs","dialogElements","dialogs","map","d","key","chatsElements","chats","c","wrapperContent","chat","compose","connect","state","messageReducer","dispatch","newMessageBody","addMessageCreator","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,KAAO,wB,oBCA7GD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,IAAM,0B,oBCAxGD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,uBAAuB,IAAM,oB,wGCmB/EC,EAfI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,YAClB,yBAAKF,UAAWC,IAAME,KAClB,yBAAKC,IAAI,GAAGC,IAAKR,EAAMM,OAE3B,yBAAKH,UAAWC,IAAMK,QAClB,kBAAC,IAAD,CAASC,GAAIT,GAAOD,EAAMW,S,kBCS3BC,EAlBF,SAACZ,GACX,OACG,6BACG,yBAAKG,UAAWC,IAAMS,WACnB,yBAAKV,UAAWC,IAAME,KACnB,yBAAKC,IAAI,GACJC,IAAI,wCAGZ,yBAAKL,UAAWC,IAAMU,UAClBd,EAAMe,Y,uCCMMC,YAAU,CAACC,KAAM,kBAAjBD,EAfL,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,aAAchB,UAAWC,IAAMgB,SACjD,kBAACC,EAAA,EAAD,CAAOC,UAAU,WACVX,KAAK,iBACLY,YAAY,iBACZpB,UAAWC,IAAMoB,aAExB,4BAAQrB,UAAWC,IAAMqB,WAAYC,SAAU1B,EAAM2B,YAArD,Y,+BCPNC,EAAiB,SAAC,GAAsB,EAArBC,MAAsB,IAAZ7B,EAAW,2BACrB8B,YAAS9B,GADY,mBACpC+B,EADoC,KAC7BC,EAD6B,KAE3C,OACG,oCAEG,8CAAcD,EAAW/B,IACxBgC,EAAKC,SAAWD,EAAKE,MACnB,yBAAK/B,UAAWC,IAAM8B,OAAQF,EAAKE,OAClC,OAKPC,EAAiB,SAACnC,GACrB,OACG,oCACG,kBAAC,IAAD,CAAQoC,cAAe,CACpBrB,QAAS,IAEJsB,iBAAkBC,IAAW,CAC1BvB,QAASuB,MACLC,IAAI,IAAK,oCAGhBrB,SAAU,SAACsB,EAAD,GAAyC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAChCC,YAAW,WACR3C,EAAMkB,SAASsB,GACfE,IACAD,GAAc,KACd,QAGV,SAAAzC,GAAK,OACH,kBAAC,IAAD,CAAMkB,SAAUlB,EAAMmB,aAChBhB,UAAWC,IAAMgB,SACpB,kBAAC,EAAD,CAAgBT,KAAK,UACJiC,KAAK,OACLrB,YAAY,iBACZpB,UAAWC,IAAMoB,aAClC,4BAAQoB,KAAK,SACLlB,SAAU1B,EAAM6C,aAChB1C,UAAWC,IAAMqB,YAErBzB,EAAM6C,aAAe,aAAe,cAmB3CC,EAVU,SAAC9C,GAKvB,OACG,kBAAC,EAAD,CAAgBkB,SALJ,SAACsB,GAEbxC,EAAM+C,WAAWP,EAAOzB,aC5BfiC,EAzBC,SAAChD,GACb,IAAIiD,EAAiBjD,EAAMkD,QAAQC,KAAI,SAAAC,GAAC,OACrC,kBAAC,EAAD,CAAY9C,IAAK8C,EAAE9C,IACPK,KAAMyC,EAAEzC,KACRT,GAAIkD,EAAElD,GACNmD,IAAKD,EAAElD,QAElBoD,EAAgBtD,EAAMuD,MAAMJ,KAAI,SAAAK,GAAC,OAClC,kBAAC,EAAD,CAAMzC,QAASyC,EAAEzC,QACXsC,IAAKG,EAAEtD,QAEhB,OACI,yBAAKC,UAAWC,IAAMqD,gBAClB,yBAAKtD,UAAWC,IAAM8C,SACjBD,GAEL,yBAAK9C,UAAWC,IAAMsD,MACjBJ,EACD,kBAAC,EAAD,CAAkBP,WAAY/C,EAAM+C,gB,gCCDrCY,sBACZC,aAlBqB,SAACC,GACtB,MAAO,CACJX,QAASW,EAAMC,eAAeZ,QAC9BK,MAAOM,EAAMC,eAAeP,UAGP,SAACQ,GACzB,MAAO,CACJhB,WAAY,SAACiB,GACVD,EAASE,YAAkBD,SAUjCE,IAFYP,CAGbX","file":"static/js/3.6081771d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContent\":\"Dialogs_wrapperContent__2ZElZ\",\"dialogs\":\"Dialogs_dialogs__1gFvF\",\"chat\":\"Dialogs_chat__39oT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1TSiC\",\"dialog\":\"DialogItem_dialog__3LKK2\",\"ava\":\"DialogItem_ava__3Aj-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBlock\":\"Chat_chatBlock__2g7aB\",\"chatItem\":\"Chat_chatItem__3Nkfc\",\"ava\":\"Chat_ava__3HzcT\"};","import React from \"react\";\r\nimport style from './DialogItem.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={style.dialogItem}>\r\n            <div className={style.ava}>\r\n                <img alt=\"\" src={props.ava}/>\r\n            </div>\r\n            <div className={style.dialog}>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './Chat.module.sass';\r\n\r\n\r\nconst Chat = (props) => {\r\n   return (\r\n      <div>\r\n         <div className={style.chatBlock}>\r\n            <div className={style.ava}>\r\n               <img alt=\"\"\r\n                    src='https://i.redd.it/ahg5rdrp9vxz.jpg'\r\n               />\r\n            </div>\r\n            <div className={style.chatItem}>\r\n               {props.message}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport style from \"./AddMessage.module.sass\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.newPost}>\r\n            <Field component=\"textarea\"\r\n                   name=\"newMessageBody\"\r\n                   placeholder=\"new message...\"\r\n                   className={style.newMessage}\r\n            />\r\n            <button className={style.buttonSend} disabled={props.submitting}>\r\n               Send\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'newMessageBody'})(AddMessageForm)\r\n\r\nconst AddMessage = (props) => {\r\n    let addNewMessage = (values) => {\r\n          props.addMessage(values.newMessageBody);\r\n    }\r\n    return (\r\n        <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n    );\r\n}\r\n\r\nexport default AddMessage;","import React from \"react\";\r\nimport style from \"./AddMessage.module.sass\";\r\nimport * as Yup from \"yup\";\r\nimport {Form, Formik, useField} from \"formik\";\r\n\r\n\r\nconst CustomTextarea = ({label, ...props}) => {\r\n   const [feild, meta] = useField(props);\r\n   return (\r\n      <>\r\n         {/*<label htmlFor={props.id || props.name}>{label}</label>*/}\r\n         <textarea {...feild} {...props}  />\r\n         {meta.touched && meta.error ? (\r\n            <div className={style.error}>{meta.error}</div>\r\n         ) : null}\r\n      </>\r\n   )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <>\r\n         <Formik initialValues={{\r\n            message: ''\r\n         }}\r\n                 validationSchema={Yup.object({\r\n                    message: Yup.string()\r\n                       .max(300, 'Must be 300 characters or less'),\r\n                 })\r\n                 }\r\n                 onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                    setTimeout(() => {\r\n                       props.onSubmit(values)\r\n                       resetForm();\r\n                       setSubmitting(false);\r\n                    }, 400)\r\n                 }}\r\n         >\r\n            {props => (\r\n               <Form onSubmit={props.handleSubmit}\r\n                     className={style.newPost}>\r\n                  <CustomTextarea name=\"message\"\r\n                                   type=\"text\"\r\n                                   placeholder=\"new message...\"\r\n                                   className={style.newMessage}/>\r\n                  <button type=\"submit\"\r\n                          disabled={props.isSubmitting}\r\n                          className={style.buttonSend}\r\n                  >\r\n                     {props.isSubmitting ? 'Sending...' : 'Send'}\r\n                  </button>\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </>\r\n   )\r\n}\r\n\r\nconst AddMessageFormik = (props) => {\r\n   let onSubmit = (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.addMessage(values.message);\r\n   }\r\n   return (\r\n      <AddMessageForm onSubmit={onSubmit}/>\r\n   );\r\n}\r\n\r\nexport default AddMessageFormik;","import React from \"react\";\r\nimport style from \"./Dialogs.module.sass\";\r\nimport DialogItem from \"./Dialogitem/DialogItem\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport AddMessage from \"./AddMessage/AddMessage\";\r\nimport AddMessageFormik from \"./AddMessage/AddMessageFormik\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogs.map(d =>\r\n       <DialogItem ava={d.ava}\r\n                   name={d.name}\r\n                   id={d.id}\r\n                   key={d.id}\r\n       />);\r\n    let chatsElements = props.chats.map(c =>\r\n       <Chat message={c.message}\r\n             key={c.id}\r\n       />);\r\n    return (\r\n        <div className={style.wrapperContent}>\r\n            <div className={style.dialogs}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.chat}>\r\n                {chatsElements}\r\n                <AddMessageFormik addMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageCreator} from \"../../redux/messageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOCs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogs: state.messageReducer.dialogs,\r\n      chats: state.messageReducer.chats\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (newMessageBody) => {\r\n         dispatch(addMessageCreator(newMessageBody));\r\n      }\r\n   }\r\n}\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}