{"version":3,"sources":["components/Dialogs/Dialogs.module.sass","components/Dialogs/Dialogitem/DialogItem.module.sass","components/Dialogs/Chat/Chat.module.sass","components/Dialogs/AddMessage/AddMessage.module.sass","components/Dialogs/Dialogitem/DialogItem.tsx","components/Dialogs/Chat/Chat.tsx","components/Dialogs/AddMessage/AddMessageFormik.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialogItem","ava","alt","src","userIcon","dialog","to","name","Chat","chatBlock","avatar","chatItem","message","AddMessageForm","onSubmit","initialValues","validationSchema","Yup","max","values","resetForm","setTimeout","newPost","placeholder","newMessage","type","disabled","isSubmitting","buttonSend","AddMessageFormik","addMessage","Dialogs","dialogElements","dialogs","map","d","key","chatsElements","chats","c","wrapperContent","chat","compose","connect","state","messageReducer","authReducer","actions","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,KAAO,wB,oBCA7GD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,IAAM,0B,oBCAxGD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,uBAAuB,IAAM,oB,oBCA9FD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,WAAa,+BAA+B,WAAa,+BAA+B,MAAQ,4B,yHCqBzIC,EAfqB,SAACC,GACjC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,YAClB,yBAAKF,UAAWC,IAAME,KAClB,yBAAKC,IAAI,GAAGC,IAAKR,EAAMM,KAAOG,OAElC,yBAAKN,UAAWC,IAAMM,QAClB,kBAAC,IAAD,CAASC,GAAIV,GAAOD,EAAMY,S,kBCa3BC,EAlBa,SAACb,GAC1B,OACG,6BACG,yBAAKG,UAAWC,IAAMU,WACnB,yBAAKX,UAAWC,IAAME,KACnB,yBAAKC,IAAI,GACJC,IAAKR,EAAMe,QAAUN,OAG7B,yBAAKN,UAAWC,IAAMY,UAClBhB,EAAMiB,Y,0CCRhBC,EAAqC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAI1C,OACG,oCACG,kBAAC,IAAD,CAAQC,cALwB,CACrCH,QAAS,IAKII,iBAAkBC,IAAW,CAC1BL,QAASK,MACLC,IAAI,IAAK,oCAGhBJ,SAAU,SAACK,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UACjBC,YAAW,WACRP,EAASK,GACTC,MAEA,QAGV,SAACzB,GAAD,OACE,kBAAC,IAAD,CAAMG,UAAWC,IAAMuB,SACpB,kBAAC,IAAD,CAAgBf,KAAK,UACLgB,YAAY,iBACZzB,UAAWC,IAAMyB,aAEjC,4BAAQC,KAAK,SACLC,SAAU/B,EAAMgC,aAChB7B,UAAWC,IAAM6B,YAErBjC,EAAMgC,aAAe,aAAe,cAuB3CE,EAVyB,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAKvC,OACG,kBAAC,EAAD,CAAgBhB,SALJ,SAACK,GAEbW,EAAWX,EAAOP,aCjBTmB,EA1BgB,SAACpC,GAC5B,IAAIqC,EAAiBrC,EAAMsC,QAAQC,KAAI,SAAAC,GAAC,OACrC,kBAAC,EAAD,CAAYlC,IAAKkC,EAAElC,IACPM,KAAM4B,EAAE5B,KACRV,GAAIsC,EAAEtC,GACNuC,IAAKD,EAAEtC,QAElBwC,EAAgB1C,EAAM2C,MAAMJ,KAAI,SAAAK,GAAC,OAClC,kBAAC,EAAD,CAAM3B,QAAS2B,EAAE3B,QACXwB,IAAKG,EAAE1C,GACPa,OAAQf,EAAMe,YAEvB,OACI,yBAAKZ,UAAWC,IAAMyC,gBAClB,yBAAK1C,UAAWC,IAAMkC,SACjBD,GAEL,yBAAKlC,UAAWC,IAAM0C,MACjBJ,EACD,kBAAC,EAAD,CAAkBP,WAAYnC,EAAMmC,gB,gCCIrCY,sBACZC,aAnBqB,SAACC,GACtB,MAAO,CACJX,QAASW,EAAMC,eAAeZ,QAC9BK,MAAOM,EAAMC,eAAeP,MAC5B5B,OAAQkC,EAAME,YAAYpC,UAgBV,CAACoB,WAAYiB,IAAQjB,aACxCkB,IAHYN,CAIbX","file":"static/js/3.d51bf7a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContent\":\"Dialogs_wrapperContent__2ZElZ\",\"dialogs\":\"Dialogs_dialogs__1gFvF\",\"chat\":\"Dialogs_chat__39oT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1TSiC\",\"dialog\":\"DialogItem_dialog__3LKK2\",\"ava\":\"DialogItem_ava__3Aj-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBlock\":\"Chat_chatBlock__2g7aB\",\"chatItem\":\"Chat_chatItem__3Nkfc\",\"ava\":\"Chat_ava__3HzcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"AddMessage_newPost__3Ct1q\",\"newMessage\":\"AddMessage_newMessage__1OfPA\",\"buttonSend\":\"AddMessage_buttonSend__3myQh\",\"error\":\"AddMessage_error__3q4xn\"};","import React, {FC} from \"react\";\r\nimport style from './DialogItem.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userIcon from \"../../../common/img/users_icon.png\"\r\nimport {DialogsType} from \"../../../types/types\";\r\n\r\n\r\nconst DialogItem: FC<DialogsType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={style.dialogItem}>\r\n            <div className={style.ava}>\r\n                <img alt=\"\" src={props.ava || userIcon}/>\r\n            </div>\r\n            <div className={style.dialog}>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React, {FC} from \"react\";\r\nimport style from './Chat.module.sass';\r\nimport userIcon from \"../../../common/img/users_icon.png\";\r\nimport {ChatsType} from \"../../../types/types\";\r\n\r\ntype OwnProps = {\r\n   avatar: string | null\r\n}\r\ntype PropsType = OwnProps & ChatsType\r\n\r\nconst Chat: FC<PropsType> = (props) => {\r\n   return (\r\n      <div>\r\n         <div className={style.chatBlock}>\r\n            <div className={style.ava}>\r\n               <img alt=\"\"\r\n                    src={props.avatar || userIcon}\r\n               />\r\n            </div>\r\n            <div className={style.chatItem}>\r\n               {props.message}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Chat;","import React, {FC} from \"react\";\r\nimport style from \"./AddMessage.module.sass\";\r\nimport * as Yup from \"yup\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {CustomTextarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\ntype LoginFormValues = {\r\n  message: string\r\n}\r\ntype FormPropsTypes = {\r\n  onSubmit: (values: LoginFormValues) => void\r\n}\r\nconst AddMessageForm: FC<FormPropsTypes> = ({onSubmit}) => {\r\n  const initialValues: LoginFormValues = {\r\n    message: ''\r\n  };\r\n   return (\r\n      <>\r\n         <Formik initialValues={initialValues}\r\n                 validationSchema={Yup.object({\r\n                    message: Yup.string()\r\n                       .max(300, 'Must be 300 characters or less'),\r\n                 })\r\n                 }\r\n                 onSubmit={(values, {resetForm}) => {\r\n                    setTimeout(() => {\r\n                       onSubmit(values)\r\n                       resetForm();\r\n                       // setSubmitting(false);\r\n                    }, 300)\r\n                 }}\r\n         >\r\n            {(props) => (\r\n               <Form className={style.newPost}>\r\n                  <CustomTextarea name=\"message\"\r\n                                  placeholder=\"new message...\"\r\n                                  className={style.newMessage}\r\n                  />\r\n                  <button type=\"submit\"\r\n                          disabled={props.isSubmitting}\r\n                          className={style.buttonSend}\r\n                  >\r\n                     {props.isSubmitting ? 'Sending...' : 'Send'}\r\n                  </button>\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </>\r\n   )\r\n}\r\n\r\n\r\ntype PropsType = {\r\n  addMessage: (message: string) => void\r\n}\r\nconst AddMessageFormik: FC<PropsType> = ({addMessage}) => {\r\n   let onSubmit = (values: LoginFormValues) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      addMessage(values.message);\r\n   }\r\n   return (\r\n      <AddMessageForm onSubmit={onSubmit}/>\r\n   );\r\n}\r\n\r\nexport default AddMessageFormik","import React, {FC} from \"react\";\r\nimport style from \"./Dialogs.module.sass\";\r\nimport DialogItem from \"./Dialogitem/DialogItem\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport AddMessageFormik from \"./AddMessage/AddMessageFormik\";\r\nimport {ChatsType, DialogsType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n  dialogs: Array<DialogsType>\r\n  chats: Array<ChatsType>\r\n  avatar: string | null\r\n  addMessage:(newMessageBody: string) => void\r\n}\r\n\r\nconst Dialogs: FC<PropsType> = (props) => {\r\n    let dialogElements = props.dialogs.map(d =>\r\n       <DialogItem ava={d.ava}\r\n                   name={d.name}\r\n                   id={d.id}\r\n                   key={d.id}\r\n       />);\r\n    let chatsElements = props.chats.map(c =>\r\n       <Chat message={c.message}\r\n             key={c.id}\r\n             avatar={props.avatar}\r\n       />);\r\n    return (\r\n        <div className={style.wrapperContent}>\r\n            <div className={style.dialogs}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.chat}>\r\n                {chatsElements}\r\n                <AddMessageFormik addMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport {actions} from \"../../redux/messageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOCs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {ChatsType, DialogsType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ComponentType} from \"react\";\r\n\r\n\r\ntype StatePropsType = {\r\n   dialogs: Array<DialogsType>\r\n   chats: Array<ChatsType>\r\n   avatar: string | null\r\n}\r\ntype StateDispatchType = {\r\n   addMessage:(newMessageBody: string) => void\r\n}\r\ntype OwnPropsType = {}\r\n// type PropsType = StatePropsType & StateDispatchType & OwnPropsType\r\nconst mapStateToProps = (state: AppStateType): StatePropsType => {\r\n   return {\r\n      dialogs: state.messageReducer.dialogs,\r\n      chats: state.messageReducer.chats,\r\n      avatar: state.authReducer.avatar,\r\n   }\r\n}\r\n// const mapDispatchToProps = (dispatch) => {\r\n//    return {\r\n//       addMessage: (newMessageBody) => {\r\n//          dispatch(addMessageCreator(newMessageBody));\r\n//       }\r\n//    }\r\n// }\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\nexport default compose<ComponentType>(\r\n   connect<StatePropsType, StateDispatchType, OwnPropsType, AppStateType>(\r\n     mapStateToProps, {addMessage: actions.addMessage}),\r\n   withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}