{"version":3,"sources":["components/Login/Login.jsx"],"names":["LoginReduxForm","reduxForm","form","captchaUrl","handleSubmit","error","submitting","onSubmit","type","placeholder","label","name","component","Input","validate","required","maxLength35","minLength2","email","minLength4","className","style","checkboxItem","formCommonError","src","alt","buttonItem","disabled","connect","state","authReducer","isAuth","login","to","values","password","rememberMe","captcha"],"mappings":"4GAAA,uGAkDMA,GAlDN,OAkDuBC,YAAU,CAACC,KAAM,SAAjBD,EAvCL,SAAC,GAAmD,IAAlDE,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAClD,OACG,0BAAMC,SAAUH,GACb,6BACG,kBAAC,IAAD,CAAOI,KAAK,QAAQC,YAAY,QAAQC,MAAM,QAAQC,KAAM,QACrDC,UAAWC,IAAOC,SAAU,CAACC,IAAUC,IAAaC,IAAYC,QAE1E,6BACG,kBAAC,IAAD,CAAOV,KAAK,WAAWC,YAAY,WAAWC,MAAM,WAAWC,KAAM,WAC9DC,UAAWC,IAAOC,SAAU,CAACC,IAAUC,IAAaG,QAE9D,yBAAKC,UAAWC,IAAMC,cACnB,kBAAC,IAAD,CAAOd,KAAK,WAAWG,KAAM,aAAcC,UAAW,UADzD,eAIGP,GAAS,yBAAKe,UAAWC,IAAME,iBAC3B,8BACIlB,IAIVF,GAAc,yBAAKqB,IAAKrB,EAAYsB,IAAI,KAEtCtB,GAAc,kBAAC,IAAD,CAAOK,KAAK,OACLC,YAAY,UACZE,KAAK,UACLC,UAAWC,IACXC,SAAU,CAACC,OAEnC,yBAAKK,UAAWC,IAAMK,YAEnB,4BAAQlB,KAAK,SAASmB,SAAUrB,GAC5BA,EAAa,aAAe,gBA+B7BsB,uBAJS,SAACC,GAAD,MAAY,CACjC1B,WAAY0B,EAAMC,YAAY3B,WAC9B4B,OAAQF,EAAMC,YAAYC,UAEW,CAACC,WAA1BJ,EAtBD,SAAC,GAAiC,IAAhCI,EAA+B,EAA/BA,MAAOD,EAAwB,EAAxBA,OAAQ5B,EAAgB,EAAhBA,WAU5B,OAAI4B,EACM,kBAAC,IAAD,CAAUE,GAAI,aAEjB,yBAAKb,UAAWC,IAAMW,OAC1B,kBAAChC,EAAD,CAAgBO,SAbF,SAAC2B,GACfF,EACGE,EAAOhB,MACPgB,EAAOC,SACPD,EAAOE,WACPF,EAAOG,UAQ0BlC,WAAYA","file":"static/js/4.863c094d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./Login.module.sass\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {email, maxLength35, minLength2, minLength4, required} from \"../../utilities/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button} from \"../Setting/Setting\";\r\n\r\n\r\nconst LoginForm = ({captchaUrl, handleSubmit, error, submitting}) => {\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <div>\r\n            <Field type=\"email\" placeholder='email' label=\"email\" name={\"email\"}\r\n                   component={Input} validate={[required, maxLength35, minLength2, email]}/>\r\n         </div>\r\n         <div>\r\n            <Field type=\"password\" placeholder='password' label=\"password\" name={\"password\"}\r\n                   component={Input} validate={[required, maxLength35, minLength4]}/>\r\n         </div>\r\n         <div className={style.checkboxItem}>\r\n            <Field type=\"checkbox\" name={\"rememberMe\"} component={\"input\"}/>Remember Me\r\n         </div>\r\n         {\r\n            error && <div className={style.formCommonError}>\r\n                <span>\r\n                   {error}\r\n                </span>\r\n            </div>\r\n         }\r\n         {captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n         {\r\n            captchaUrl && <Field type=\"text\"\r\n                                 placeholder='Captcha'\r\n                                 name=\"captcha\"\r\n                                 component={Input}\r\n                                 validate={[required]}/>\r\n         }\r\n         <div className={style.buttonItem}>\r\n            {/*<Button primary type=\"submit\" disabled={submitting}>{submitting ? 'Loading...' : 'Log In'}</Button>*/}\r\n            <button type=\"submit\" disabled={submitting}>\r\n               {submitting ? 'Loading...' : 'Log In'}\r\n            </button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n   const addLogin = (values) => {\r\n      login(\r\n         values.email,\r\n         values.password,\r\n         values.rememberMe,\r\n         values.captcha\r\n      );\r\n   }\r\n\r\n   if (isAuth) {\r\n      return <Redirect to={\"/profile\"}/>\r\n   }\r\n   return <div className={style.login}>\r\n      <LoginReduxForm onSubmit={addLogin} captchaUrl={captchaUrl}/>\r\n   </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   captchaUrl: state.authReducer.captchaUrl,\r\n   isAuth: state.authReducer.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}